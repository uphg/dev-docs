import{_ as s}from"./chunks/plugin-vue_export-helper.x3n3nnut.js";import{x as i,v as a,z as e}from"./chunks/vue.6z6dcVl3.js";const u=JSON.parse('{"title":"Rails 密钥管理","description":"","frontmatter":{},"headers":[],"relativePath":"full-stack/bookkeeping/rails-key-management.md","filePath":"full-stack/bookkeeping/rails-key-management.md","lastUpdated":1694855059000}'),t={name:"full-stack/bookkeeping/rails-key-management.md"},n=e(`<h1 id="rails-密钥管理" tabindex="-1">Rails 密钥管理 <a class="header-anchor" href="#rails-密钥管理" aria-label="Permalink to &quot;Rails 密钥管理&quot;">​</a></h1><p>Web 应用中的对称加密</p><ul><li>JWT 加密解密需要一个 key1</li><li>Session ID 加密解密需要一个 key2</li></ul><p>问题：key 们存在哪？</p><ul><li>存在 git 里会被其他人看到、存在自己电脑需要传来传去（不安全）</li></ul><p>解法：Rails 帮我们想好了</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>master.key + keys =&gt; encrypted</span></span>
<span class="line"><span>encrypted + master.key =&gt; keys</span></span></code></pre></div><h2 id="如何修改-key" tabindex="-1">如何修改 key <a class="header-anchor" href="#如何修改-key" aria-label="Permalink to &quot;如何修改 key&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># VSCode 打开</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> EDITOR=&quot;code --wait&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bin/rails credentials:edit</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Vim 打开</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> EDITOR=&quot;vim&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bin/rails credentials:edit</span></span></code></pre></div><h2 id="如何读取-key" tabindex="-1">如何读取 key <a class="header-anchor" href="#如何读取-key" aria-label="Permalink to &quot;如何读取 key&quot;">​</a></h2><p>打开控制台</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bin/rails console # or </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">bin/rails c</span></span></code></pre></div><p>输入代码</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Rails</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.application.credentials.secret_key_base</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Rails</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.application.credentials.github[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h2 id="安全问题" tabindex="-1">安全问题 <a class="header-anchor" href="#安全问题" aria-label="Permalink to &quot;安全问题&quot;">​</a></h2><p>Rails：我支持多环境密钥</p><p>编辑生产环境密钥</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> EDITOR=&quot;code --wait&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rails credentials:edit --environment production</span></span></code></pre></div><p>打开 ruby 控制台</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RAILS_ENV=production rails c</span></span></code></pre></div><p>获取 key</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Rails.application.credentials.secret_key_base</span></span></code></pre></div><p>把 production.key 复制到生产环境，不要给其他人。或者你也可以删掉 production.key（但要备份）</p><h2 id="最终方案" tabindex="-1">最终方案 <a class="header-anchor" href="#最终方案" aria-label="Permalink to &quot;最终方案&quot;">​</a></h2><p>运行以下命令，将生成的 secret_key_base 复制</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> EDITOR=&quot;code --wait&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bin/rails credentials:edit</span></span></code></pre></div><p>运行以下命令，将复制的 secret_key_base 粘贴至生产环境</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> EDITOR=&quot;code --wait&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rails credentials:edit --environment production</span></span></code></pre></div><p>然后删除 <code>config/master.key</code>、<code>config/credentials.yml.enc</code>，重新运行</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> EDITOR=&quot;code --wait&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bin/rails credentials:edit</span></span></code></pre></div><p>生成开发环境 secret_key_base（避免两个环境的 secret_key_base 重复）。</p><p>然后修改 database.yml 生产环境配置。</p><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">production</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">default</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  database</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mangosteen_production</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mangosteen</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;%= ENV[&quot;DB_PASSWORD&quot;] %&gt;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;%= ENV[&quot;DB_HOST&quot;] %&gt;</span></span></code></pre></div><p>再次运行 <code>./bin/pack_for_host.sh</code> 打包项目，并且到生产环境 windows 端的 Git bash 运行如下代码</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 运行 docker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DB_HOST=db-for-mangosteen DB_PASSWORD=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">123456</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RAILS_MASTER_KEY=xxx mangosteen_deploy/setup_host.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 测试请求</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl localhost:3000/api/v1/items -v</span></span></code></pre></div><p>会返回 500 报错，说明还没有创建数据库，运行以下代码创建</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker exec -it mangosteen-prod-1 bin/rails db:create db:migrate</span></span></code></pre></div><p>再次测试请求即可成功。</p><div class="info custom-block"><p class="custom-block-title">删除数据库</p><p>如果之前创建过数据库，可以先删除数据库，如下</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进入 bash 脚本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker exec -it mangosteen-prod-1 bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除数据库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DISABLE_DATABASE_ENVIRONMENT_CHECK=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bin/rails db:drop</span></span></code></pre></div></div><p>此时开发环境和 生产环境的 key 就是相对隔离的，如下：</p><p>开发环境</p><ul><li>使用 master.key 和 credentials.yml.enc</li><li>master.key 被 git ignore</li><li>如果 .enc 不被 git ignore，那就多人共用 master.key</li><li>如果 .enc 要被 git ignore，那就每个人创建自己的 master.key</li></ul><p>生产环境</p><ul><li>使用 production.key 和 production.yml.enc</li><li>production.key 被 git ignore，内容写到环境变量</li><li>.env 不被 git ignore</li><li>读取 key 们的代码跟开发环境一模一样</li></ul>`,44),l=[n];function p(h,k,d,o,c,r){return a(),i("div",null,l)}const b=s(t,[["render",p]]);export{u as __pageData,b as default};
