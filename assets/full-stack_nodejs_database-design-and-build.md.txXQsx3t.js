import{_ as s}from"./chunks/plugin-vue_export-helper.x3n3nnut.js";import{x as a,v as n,z as i}from"./chunks/vue.6z6dcVl3.js";const m=JSON.parse('{"title":"数据库设计与搭建","description":"","frontmatter":{},"headers":[],"relativePath":"full-stack/nodejs/database-design-and-build.md","filePath":"full-stack/nodejs/database-design-and-build.md","lastUpdated":1690551438000}'),l={name:"full-stack/nodejs/database-design-and-build.md"},p=i(`<h1 id="数据库设计与搭建" tabindex="-1">数据库设计与搭建 <a class="header-anchor" href="#数据库设计与搭建" aria-label="Permalink to &quot;数据库设计与搭建&quot;">​</a></h1><h2 id="增删改查的难点" tabindex="-1">增删改查的难点 <a class="header-anchor" href="#增删改查的难点" aria-label="Permalink to &quot;增删改查的难点&quot;">​</a></h2><p><strong>开发效率</strong></p><ul><li>很多人做了五年的 CRUD，开发效率却始终没有变</li><li>如何做到快速开发？</li></ul><p><strong>代码质量</strong></p><ul><li>为何互联网公司的代码大部分都是屎山，难以维护</li><li>2000 年左右就兴起的单元测试技术，为何还不会用</li><li>宣称敏捷开发，是否懂得敏捷开发包含单元测试</li></ul><p><strong>前后端联调</strong></p><ul><li>为何后端给出的接口前端总是无法流畅使用，需要联调</li><li>前后端代码交给两个人做，增加的沟通成本是否值得</li></ul><p><strong>伸缩性</strong></p><ul><li>数据量变大之后，应用是否还能正常运行</li><li>业务量增加之后，机器性能是否还扛得住</li></ul><p><strong>高并发 C10k problem</strong></p><ul><li>如果 10000 个连接同时进入，怎么保证服务质量</li><li>课外读物：<a href="https://www.zhihu.com/question/54895548" target="_blank" rel="noreferrer">如何设计秒杀系统</a></li></ul><p><strong>安全性和稳定性</strong></p><ul><li>怎么防脱裤、MD5 碰撞？怎么防 XSS、CSRF、Replay？</li><li>怎么备份数据？怎么双活？</li></ul><p><strong>怎么预防脱发、颈椎病、肾结石</strong></p><h2 id="一些重要的原则" tabindex="-1">一些重要的原则 <a class="header-anchor" href="#一些重要的原则" aria-label="Permalink to &quot;一些重要的原则&quot;">​</a></h2><p><strong>过早优化乃万恶之源</strong></p><ul><li>Premature optimization is the root of all evil</li><li>如果你没有办法量化性能，就不要尝试优化性能</li></ul><p><strong>开发效率 &gt; 可读性 &gt; 运行效率</strong></p><ul><li>对于初创公司，最重要的事情是活下去</li><li>80% 以上的中国创业公司活不过三年</li></ul><p><strong>可用性 &gt; 易用性 &gt; 美观</strong></p><ul><li>不要一开始就在易用性和美观性上浪费太多时间</li></ul><p><strong>永远不要删除数据（敏感数据除外）</strong></p><ul><li>尽量软删除，删除前确认</li></ul><h2 id="自学的最好方式" tabindex="-1">自学的最好方式 <a class="header-anchor" href="#自学的最好方式" aria-label="Permalink to &quot;自学的最好方式&quot;">​</a></h2><p>定一个目标，然后去做，不管结果怎么样，你都会学到东西。</p><h2 id="需求分析" tabindex="-1">需求分析 <a class="header-anchor" href="#需求分析" aria-label="Permalink to &quot;需求分析&quot;">​</a></h2><p><strong>博客系统</strong></p><ul><li>用户可以登录、注销，但不可以修改密码（功能从简）</li><li>需要重置密码可以自行联系管理员</li><li>用户可以对博客进行增删改查</li><li>用户可以对博客进行评论，但不能修改评论（功能从简）</li><li>用户不可以编辑用户名、密码、姓名、头像（功能从简）</li></ul><p><strong>可用性要求</strong></p><ul><li>手机也能完成上面的操作</li></ul><p><strong>其他要求</strong></p><ul><li>对搜索引擎优化</li></ul><h2 id="思路" tabindex="-1">思路 <a class="header-anchor" href="#思路" aria-label="Permalink to &quot;思路&quot;">​</a></h2><p><strong>需求</strong></p><ul><li>简单的增删改查</li><li>主要的表有 users/posts/comments</li></ul><p><strong>主要的数据</strong></p><ul><li>user (id/username/password_digest)</li><li>posts (id/user_id/title/content)</li><li>comments (id/user_id/post_id/content)</li></ul><p><strong>其他</strong></p><ul><li>手机适配：设计两套界面 PC + mobile</li><li>SEO：多用 SSG 或 SSR，少用 BSR</li></ul><h2 id="开始写代码" tabindex="-1">开始写代码 <a class="header-anchor" href="#开始写代码" aria-label="Permalink to &quot;开始写代码&quot;">​</a></h2><p><strong>创建表</strong></p><ul><li>使用 migration</li></ul><p><strong>创建关联</strong></p><ul><li>使用 TypeORM 提供的 API</li></ul><p><strong>填充数据</strong></p><ul><li>使用 seed 脚本</li></ul><p><strong>创建页面</strong></p><ul><li>首页、登录页、注册页</li></ul><p><strong>创建 API</strong></p><ul><li><code>/api/v1/sign_up</code> 注册</li><li><code>/api/v1/sign_in</code> 登录</li></ul><p><strong>约定前后端接口</strong></p><ul><li>RESTful</li><li>约定错误码</li><li>约定资源格式</li></ul><p><strong>单元测试</strong></p><ul><li>成功要测、失败也要测</li><li>外部依赖不要测</li></ul><h2 id="操作数据库" tabindex="-1">操作数据库 <a class="header-anchor" href="#操作数据库" aria-label="Permalink to &quot;操作数据库&quot;">​</a></h2><p><strong>删除之前的容器</strong></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看所有容器运行状态</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ps -a</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 关闭指定容器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kill 容器id</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除指定容器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm 容器id</span></span></code></pre></div><p><strong>删除当前数据库</strong></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在 psql 中运行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">drop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> database blog_development</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p><strong>创建数据库</strong></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CREATE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DATABASE xxx ENCODING &#39;UTF8&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LC_COLLATE &#39;en_US.utf8&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LC_CTYPE &#39;en_US.utf8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="创建数据库关联" tabindex="-1">创建数据库关联 <a class="header-anchor" href="#创建数据库关联" aria-label="Permalink to &quot;创建数据库关联&quot;">​</a></h2><p>三个表之间的关联关系</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>users</span></span>
<span class="line"><span>a user has many post</span></span>
<span class="line"><span>a user has many comments</span></span>
<span class="line"><span></span></span>
<span class="line"><span>posts</span></span>
<span class="line"><span>a post belongs to a user</span></span>
<span class="line"><span>a post has many comments</span></span>
<span class="line"><span></span></span>
<span class="line"><span>comments</span></span>
<span class="line"><span>a comment belongs to a user</span></span>
<span class="line"><span>a comment belongs to a post</span></span></code></pre></div><p>对应</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>用户</span></span>
<span class="line"><span>一个用户有很多文章</span></span>
<span class="line"><span>一个用户有很多评论</span></span>
<span class="line"><span></span></span>
<span class="line"><span>文章</span></span>
<span class="line"><span>一篇文章属于一个用户</span></span>
<span class="line"><span>一篇文章有很多评论</span></span>
<span class="line"><span></span></span>
<span class="line"><span>评论</span></span>
<span class="line"><span>一个评论属于一个用户</span></span>
<span class="line"><span>一个评论属于一篇文章</span></span></code></pre></div>`,67),t=[p];function e(o,r,h,d,c,g){return n(),a("div",null,t)}const b=s(l,[["render",e]]);export{m as __pageData,b as default};
