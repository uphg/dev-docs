import{_ as s}from"./chunks/plugin-vue_export-helper.x3n3nnut.js";import{x as a,v as i,z as n}from"./chunks/vue.6z6dcVl3.js";const y=JSON.parse('{"title":"什么是 RESTful API","description":"","frontmatter":{},"headers":[],"relativePath":"full-stack/bookkeeping/restful-api.md","filePath":"full-stack/bookkeeping/restful-api.md","lastUpdated":1692101676000}'),p={name:"full-stack/bookkeeping/restful-api.md"},l=n(`<h1 id="什么是-restful-api" tabindex="-1">什么是 RESTful API <a class="header-anchor" href="#什么是-restful-api" aria-label="Permalink to &quot;什么是 RESTful API&quot;">​</a></h1><p>RESTful 全称 REpresentational State Transfer</p><h3 id="rest-是什么" tabindex="-1">REST 是什么 <a class="header-anchor" href="#rest-是什么" aria-label="Permalink to &quot;REST 是什么&quot;">​</a></h3><ul><li>一种网络软件架构风格。</li><li>不是标准、不是协议、不是接口，只是一种风格。</li><li>Roy 于 2000 年在自己博士论文中提到此术语。</li><li>Roy 曾参与撰写 HTTP 规格文档。</li></ul><h3 id="如何实现" tabindex="-1">如何实现 <a class="header-anchor" href="#如何实现" aria-label="Permalink to &quot;如何实现&quot;">​</a></h3><ol><li>以资源为中心。</li><li>充分利用 HTTP 现有功能，如动词、状态码、头部字段。</li><li><a href="https://docs.github.com/en/rest/repos" target="_blank" rel="noreferrer">GitHub API</a> 就比较符合 REST，值得学习。</li></ol><blockquote><p>其实用一用就能秒懂 REST，我们开始吧</p></blockquote><h2 id="rest-风格举例" tabindex="-1">REST 风格举例 <a class="header-anchor" href="#rest-风格举例" aria-label="Permalink to &quot;REST 风格举例&quot;">​</a></h2><ul><li><p>请求：创建 item</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>POST /api/v1/items</span></span>
<span class="line"><span>Content-Type: application/json</span></span>
<span class="line"><span>消息体 {&quot;amount&quot;:99, &quot;kind&quot;: &quot;income&quot;}</span></span>
<span class="line"><span>响应 {&quot;resource&quot;: {...}} 或 {&quot;errors&quot;: {...}}</span></span></code></pre></div></li><li><p>请求：更新 item</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>PATCH /api/v1/items/1</span></span>
<span class="line"><span>Content-Type: application/json</span></span>
<span class="line"><span>消息体 {&quot;amount&quot;:&quot;11&quot;, &quot;kind&quot;: &quot;expense&quot;}</span></span></code></pre></div></li><li><p>请求：删除 item</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>DELETE /api/v1/items/1</span></span></code></pre></div></li><li><p>请求：获取一个或多个 item</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>GET /api/v1/items/1</span></span>
<span class="line"><span>GET /api/v1/items?page=1&amp;per_page=10</span></span>
<span class="line"><span>GET /api/v1/users/2/items</span></span>
<span class="line"><span>GET /api/v1/items?user_id=2</span></span>
<span class="line"><span>GET /api/v1/items?tags_id[]=1&amp;tags_id[]=2</span></span>
<span class="line"><span>GET /api/v1/items?tags_id=1,2</span></span>
<span class="line"><span>GET /api/v1/items?sort_by[]=id+asc&amp;sort_by[]=name+desc</span></span>
<span class="line"><span>GET /api/v1/items?keyword=hi</span></span>
<span class="line"><span>GET /api/v1/items/search/hi</span></span></code></pre></div></li></ul><p><strong>REST 风格总结</strong></p><ol><li>尽量以资源为中心（url 里的 items 就是资源）。</li><li>尽量使用 HTTP 现有功能（其实响应头里也可以包含内容，但目前的例子都没有用到）。</li><li>可以适当违反规则：比如 /api/v1/items/search/hi。</li></ol><p>简单的说就是：</p><ul><li>看见路径就知道请求什么东西</li><li>看见动词就知道是什么操作</li><li>看见状态码就知道结果是什么，例如：<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>200 - 成功      201 - 创建成功</span></span>
<span class="line"><span>404 - 未找到    403 - 没有权限    401 - 未登录</span></span>
<span class="line"><span>422 - 无法处理，参数有问题         402 - 需付费</span></span>
<span class="line"><span>412 - 不满足前提条件               429 - 请求太频繁</span></span>
<span class="line"><span>400 - 其他所有错误，详细原因可以放在 body 里</span></span></code></pre></div></li></ul><h2 id="设计-api" tabindex="-1">设计 API <a class="header-anchor" href="#设计-api" aria-label="Permalink to &quot;设计 API&quot;">​</a></h2><h3 id="发送验证码" tabindex="-1">发送验证码 <a class="header-anchor" href="#发送验证码" aria-label="Permalink to &quot;发送验证码&quot;">​</a></h3><ul><li>资源：validation_codes</li><li>动作：create(POST)</li><li>状态码：200 | 201 | 422 | 429</li></ul><h3 id="登入登出" tabindex="-1">登入登出 <a class="header-anchor" href="#登入登出" aria-label="Permalink to &quot;登入登出&quot;">​</a></h3><ul><li>资源：session（没有s！）</li><li>动作：create | destroy(DELETE)</li><li>状态码：200 | 422</li></ul><h3 id="当前用户" tabindex="-1">当前用户 <a class="header-anchor" href="#当前用户" aria-label="Permalink to &quot;当前用户&quot;">​</a></h3><ul><li>资源：me</li><li>动作：show(GET)</li></ul><h3 id="记账数据" tabindex="-1">记账数据 <a class="header-anchor" href="#记账数据" aria-label="Permalink to &quot;记账数据&quot;">​</a></h3><ul><li>资源：items</li><li>动作：create | update | show | index | destroy <ul><li>update 对应 PATCH，表示部分更新</li><li>show 对应 GET /items/:id，用来展示一条记账</li><li>index 对应 GET /items?since=2022-01-01&amp;before=2023-01-01</li><li>destroy 对应 DELETE，表示删除，一般为软删除</li></ul></li></ul><h3 id="标签" tabindex="-1">标签 <a class="header-anchor" href="#标签" aria-label="Permalink to &quot;标签&quot;">​</a></h3><ul><li>资源：tags</li><li>动作：create | update | show | index | destroy</li></ul><h3 id="打标签" tabindex="-1">打标签 <a class="header-anchor" href="#打标签" aria-label="Permalink to &quot;打标签&quot;">​</a></h3><ul><li>资源：taggings（动词的名词形式）</li><li>动作：create | index | destroy</li></ul><p>至此，API 概要设计已完成。</p><h2 id="api-实现" tabindex="-1">API 实现 <a class="header-anchor" href="#api-实现" aria-label="Permalink to &quot;API 实现&quot;">​</a></h2><p>首先在 <code>config/routes.rb</code> 中添加以下代码</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Rails</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.application.routes.draw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  namespace </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:api</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    namespace </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:v1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      resources </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:validation_codes</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>添加后运行 <code>bin/rails routes</code>，成功后会默认生成如下路由对应</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>GET    /api/v1/validation_codes(.:format)         api/v1/validation_codes#index</span></span>
<span class="line"><span>POST   /api/v1/validation_codes(.:format)         api/v1/validation_codes#create</span></span>
<span class="line"><span>GET    /api/v1/validation_codes/:id(.:format)     api/v1/validation_codes#show</span></span>
<span class="line"><span>PATCH  /api/v1/validation_codes/:id(.:format)     api/v1/validation_codes#update</span></span>
<span class="line"><span>PUT    /api/v1/validation_codes/:id(.:format)     api/v1/validation_codes#update</span></span>
<span class="line"><span>DELETE /api/v1/validation_codes/:id(.:format)     api/v1/validation_codes#destroy</span></span></code></pre></div><p>上面表示路由已经与方法一一对应，但我们不需要这么多方法，可以使用 only 只生成指定方法</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Rails</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.application.routes.draw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  namespace </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:api</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    namespace </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:v1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      resources </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:validation_codes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">only:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>它还有一个相反的语法 exclude，表示排除指定方法</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Rails</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.application.routes.draw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  namespace </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:api</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    namespace </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:v1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      resources </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:validation_codes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exclude:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>继续添加路由</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Rails</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.application.routes.draw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  namespace </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:api</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    namespace </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:v1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      resources </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:validation_codes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">only:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      resource </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:session</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">only:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:destroy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      resource </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:me</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">only:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:show</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      resources </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:items</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      resources </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:tags</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>然后运行 <code>bin/rails routes</code> 生成如下对应关系</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>POST   /api/v1/validation_codes(.:format)  api/v1/validation_codes#create</span></span>
<span class="line"><span>DELETE /api/v1/session(.:format)           api/v1/sessions#destroy</span></span>
<span class="line"><span>POST   /api/v1/session(.:format)           api/v1/sessions#create</span></span>
<span class="line"><span>GET    /api/v1/me(.:format)                api/v1/mes#show</span></span>
<span class="line"><span>GET    /api/v1/items(.:format)             api/v1/items#index</span></span>
<span class="line"><span>POST   /api/v1/items(.:format)             api/v1/items#create</span></span>
<span class="line"><span>GET    /api/v1/items/:id(.:format)         api/v1/items#show</span></span>
<span class="line"><span>PATCH  /api/v1/items/:id(.:format)         api/v1/items#update</span></span>
<span class="line"><span>PUT    /api/v1/items/:id(.:format)         api/v1/items#update</span></span>
<span class="line"><span>DELETE /api/v1/items/:id(.:format)         api/v1/items#destroy</span></span>
<span class="line"><span>GET    /api/v1/tags(.:format)              api/v1/tags#index</span></span>
<span class="line"><span>POST   /api/v1/tags(.:format)              api/v1/tags#create</span></span>
<span class="line"><span>GET    /api/v1/tags/:id(.:format)          api/v1/tags#show</span></span>
<span class="line"><span>PATCH  /api/v1/tags/:id(.:format)          api/v1/tags#update</span></span>
<span class="line"><span>PUT    /api/v1/tags/:id(.:format)          api/v1/tags#update</span></span>
<span class="line"><span>DELETE /api/v1/tags/:id(.:format)          api/v1/tags#destroy</span></span></code></pre></div><p><strong>实现 ValidationCode</strong></p><p>运行以下命令生成数据模型</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin/rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g model ValidationCode email:string kind:string used_at:datetime</span></span></code></pre></div><p>修改 db/migrate/20230809134237_create_validation_codes.rb 文件</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CreateValidationCodes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ActiveRecord::Migration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> change</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    create_table </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:validation_codes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |t|</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      t.string </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:email</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      t.integer </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">default:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      t.string </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">limit:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      t.datetime </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:used_at</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      t.timestamps</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>依次运行以下命令</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 生成数据库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin/rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> db:migrate</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 生成 Controller</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin/rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g controller Api::V1::ValidationCodes create</span></span></code></pre></div><p>在 <code>app/controllers/api/v1/validation_codes_controller.rb</code> 中添加如下内容</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Api::V1::ValidationCodesController</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ApplicationController</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> create</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    head </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">202</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>测试接口</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST http://127.0.0.1:3000/api/v1/validation_codes -v</span></span></code></pre></div><p>创建 Items 的 Controller</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin/rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g controller Api::V1::Items</span></span></code></pre></div><h2 id="实现分页" tabindex="-1">实现分页 <a class="header-anchor" href="#实现分页" aria-label="Permalink to &quot;实现分页&quot;">​</a></h2><p>两种方案</p><ol><li>使用 page 和 per_page 参数，见 kaminari 或 pagy 库。</li><li>使用 start_id 和 limit 参数，需要 id 是自增数字。</li></ol><h3 id="使用-kaminari-实现" tabindex="-1">使用 kaminari 实现 <a class="header-anchor" href="#使用-kaminari-实现" aria-label="Permalink to &quot;使用 kaminari 实现&quot;">​</a></h3><p>在 Gemfile 中添加以下依赖，并重新 bundle</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;kaminari&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span></span></code></pre></div><p><strong>添加 kaminari 配置</strong></p><p>运行以下命令生成在 <code>config/initializers/kaminari_config.rb</code> 的配置文件</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin/rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g kaminari:config</span></span></code></pre></div><p>在配置文件中添加以下内容，表示每页 10 个</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Kaminari</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.configure </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |config|</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  config.default_per_page </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>也可以在接口函数调用时配置</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Api::V1::ItemsController</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ApplicationController</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> index</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 每页 100 条</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.page(params[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:page</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]).per(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    render </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">json:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> create</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div>`,66),e=[l];function t(h,k,d,r,o,c){return i(),a("div",null,e)}const u=s(p,[["render",t]]);export{y as __pageData,u as default};
