import{_ as s}from"./chunks/plugin-vue_export-helper.x3n3nnut.js";import{x as i,v as a,z as n}from"./chunks/vue.6z6dcVl3.js";const o=JSON.parse('{"title":"其他问题整合","description":"","frontmatter":{},"headers":[],"relativePath":"interview/other.md","filePath":"interview/other.md","lastUpdated":1706620851000}'),l={name:"interview/other.md"},h=n(`<h1 id="其他问题整合" tabindex="-1">其他问题整合 <a class="header-anchor" href="#其他问题整合" aria-label="Permalink to &quot;其他问题整合&quot;">​</a></h1><h2 id="es6-常用-api-有哪些" tabindex="-1">ES6 常用 API 有哪些 <a class="header-anchor" href="#es6-常用-api-有哪些" aria-label="Permalink to &quot;ES6 常用 API 有哪些&quot;">​</a></h2><p>见：<a href="./../web/es6.html">ES6 常用 API</a></p><p>let、const、箭头函数、Symbol、Set、WeakSet、Map、WeakMap、Proxy、Promise</p><h2 id="区块链项目" tabindex="-1">区块链项目 <a class="header-anchor" href="#区块链项目" aria-label="Permalink to &quot;区块链项目&quot;">​</a></h2><ul><li>区块链是一种分布式的、去中心化的技术和数据结构。</li><li>主要用于记录交易和数据，保证数据的安全性、透明性、和不可更改性。</li><li>去中心化主要指的是它没有中央机构或者第三方机构控制。通过分布式网络中的多个节点共同维护和验证数据的唯一性。</li></ul><h2 id="大屏可视化项目的适配思路" tabindex="-1">大屏可视化项目的适配思路 <a class="header-anchor" href="#大屏可视化项目的适配思路" aria-label="Permalink to &quot;大屏可视化项目的适配思路&quot;">​</a></h2><ol><li>屏幕宽高比通常是 16:9，可以根据这个比例判断当前屏幕是否过宽/过长</li><li>如果过长（手机屏幕），那就默认以宽度作为比例适配</li><li>如果过宽，那么根据高度 x 16:9 计算出当前宽度来适配</li><li>使用 CSS 预处理器语法，根据屏幕宽度计算当前设计图尺寸 rem 对应的 1px。</li><li>根据屏幕尺寸变化响应宽度自适应</li></ol><h2 id="react-和-vue-的区别" tabindex="-1">React 和 Vue 的区别？ <a class="header-anchor" href="#react-和-vue-的区别" aria-label="Permalink to &quot;React 和 Vue 的区别？&quot;">​</a></h2><ol><li>语法和模板：React 使用JSX（JavaScript XML），Vue 使用 template 模板。</li><li>生态系统：React 周边生态比较庞大，有多种选择。Vue 有一套官方的周边生态（Vue Router、Vuex、Pinia）。</li><li>响应式更新：React 需要手动更新页面数据，Vue 可以通过数据响应式自动更新。</li><li>数据可变性：React 推崇数据不可变性，如果要更新数据，每次都要传入一个新的数据对象（可使用 <code>immer.js</code> 优化）。</li><li>虚拟 DOM：Vue 的虚拟 DOM 算法（双端对比）性能比 React 优化的更好。两者都是通过比较前后两个虚拟 DOM 树的差异来更新视图。但是，如果 Vue 使用 template 模板语法，可以进一步优化性能。</li></ol><h2 id="typescript-和-javascript-的区别是什么" tabindex="-1">TypeScript 和 JavaScript 的区别是什么 <a class="header-anchor" href="#typescript-和-javascript-的区别是什么" aria-label="Permalink to &quot;TypeScript 和 JavaScript 的区别是什么&quot;">​</a></h2><ol><li>静态类型检查：TypeScript 引入了静态类型检查，允许开发者在编码过程中指定变量的类型。这样可以在编译时捕获类型错误，提高代码质量和可维护性。JavaScript 是一种动态类型语言，变量的类型在运行时确定。</li><li>类型注解和类型推断：TypeScript 允许开发者为变量、函数参数、函数返回值等添加类型注解，明确指定其类型。另外，TypeScript 还能够根据上下文自动推断变量的类型，减少了手动添加类型注解的负担。JavaScript 没有类型注解和类型推断的功能。</li><li>类和接口：TypeScript 提供了类和接口的概念，可以使用面向对象的编程方式来组织代码。类可以包含属性、方法和构造函数，而接口定义了对象的结构和行为。JavaScript 也可以使用面向对象的编程风格，但语言本身没有提供类和接口的原生支持。</li><li>枚举类型：TypeScript 支持枚举类型，可以定义具名的常量集合。枚举类型在一些场景下能够提高代码的可读性和可维护性。JavaScript 没有原生的枚举类型，通常使用常量或对象来模拟枚举。</li><li>编译时类型检查：TypeScript 需要通过编译器将 TypeScript 代码转换为 JavaScript 代码。在这个过程中，编译器会进行类型检查，捕获潜在的类型错误。JavaScript 是一种解释性语言，不需要显式的编译过程。</li></ol><h2 id="简述微信小程序原理" tabindex="-1">简述微信小程序原理 <a class="header-anchor" href="#简述微信小程序原理" aria-label="Permalink to &quot;简述微信小程序原理&quot;">​</a></h2><ul><li>小程序本质就是一个单页面应用，所有的页面渲染和事件处理，都在一个页面内进行，但又可以通过微信客户端调用原生的各种接口。</li><li>微信基于 XML 开发了一套自己 WXML 语法</li><li>WXSS 拥有 CSS 的大部分特性，但是添加了 rpx 单位</li></ul><h2 id="微信小程序的优缺点" tabindex="-1">微信小程序的优缺点 <a class="header-anchor" href="#微信小程序的优缺点" aria-label="Permalink to &quot;微信小程序的优缺点&quot;">​</a></h2><p>优点</p><ul><li>基于微信平台开发，享受微信自带的流量。</li><li>开发流程较简单，微信提供了云服务和迭代审核。</li><li>容易上手，基础组件库比较全，基本不需要考虑兼容问题。</li><li>用户体验良好，无需下载，通过搜索和扫一扫就可以打开</li><li>rpx：假设屏幕宽度为 375，750rpx = 375px = 750物理像素，1rpx = 0.5px = 1物理像素。</li></ul><p>缺点</p><ul><li>页面大小不能超过1M，不能打开超过5个层级的页面</li><li>后台调试麻烦，因为API接口必须https请求，且公网地址（也就是说后台代码必须发布到远程服务器上）</li><li>真机测试，个别安卓和苹果表现迥异，例如安卓的定位功能加载很慢</li></ul><h2 id="使用-uniapp-开发与原生-vue-的语法有哪些差异" tabindex="-1">使用 uniapp 开发与原生 Vue 的语法有哪些差异 <a class="header-anchor" href="#使用-uniapp-开发与原生-vue-的语法有哪些差异" aria-label="Permalink to &quot;使用 uniapp 开发与原生 Vue 的语法有哪些差异&quot;">​</a></h2><ol><li>小程序不支持指令（directive）</li><li>不支持 defineComponent、defineAsyncComponent 函数</li><li>不支持 nextTick 函数</li><li>不支持 keep-alive 和相关的生命周期</li><li>不支持 <code>$el</code> 获取当前实例元素</li><li>不支持 <code>transition</code> 、<code>transition-group</code> 组件</li><li>不支持 Vue3 的 <code>teleport</code> 组件</li></ol><h2 id="用过哪些-css-布局" tabindex="-1">用过哪些 CSS 布局 <a class="header-anchor" href="#用过哪些-css-布局" aria-label="Permalink to &quot;用过哪些 CSS 布局&quot;">​</a></h2><ul><li>最开始学习前端的时候，用的最多的是浮动布局 <code>float: left;</code></li><li>后来学习了 flex 布局，基本上就一直用</li></ul><p>flex 布局的常用属性</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: flex; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flex</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">direction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: column; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// flex 容器内项目排列方向</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">justify</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: center; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 主轴</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">align</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: center; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 交叉轴</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flex</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: wrap; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 是否可以换行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flex</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 放大比例</span></span></code></pre></div><p>grid 布局</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.parent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  flex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;box1 box4 box4 box7&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fr</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;box2 box4 box4 box8&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fr</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;box3 box5 box6 box9&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">35</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 25</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 25</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 35</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.child1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-area</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: box1;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.child2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-area</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: box2;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.child3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-area</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: box2;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>fr 表示比例，上面的 <code>35fr 25fr 25fr 35fr</code> 就是他们列的比例，3 个 <code>1fr</code> 就是行的比例（每个占 3 分之1）</p><h2 id="代码审批流程" tabindex="-1"><strong>代码审批流程</strong> <a class="header-anchor" href="#代码审批流程" aria-label="Permalink to &quot;**代码审批流程**&quot;">​</a></h2><ol><li>定期抽取部分同事代码，由前端项目负责人进行审批。</li><li>发现代码的错误问题，在开会时提出（匿名）。</li></ol><h2 id="搭建项目框架的流程" tabindex="-1"><strong>搭建项目框架的流程</strong> <a class="header-anchor" href="#搭建项目框架的流程" aria-label="Permalink to &quot;**搭建项目框架的流程**&quot;">​</a></h2><ol><li>选择项目框架（Vue）、脚手架（Vite）。</li><li>根据项目需求，选择页面渲染形式（SSG，SPA，SSR）。</li><li>参考一些开源的后台管理模板，自己搭建一套后台管理模板。</li><li>会封装一个公共的项目模板，放在 git 维护。</li></ol><h2 id="你是如何升级公司的项目的-js-ts、webpack-vite" tabindex="-1"><strong>你是如何升级公司的项目的（JS-&gt; TS、Webpack -&gt; Vite）</strong> <a class="header-anchor" href="#你是如何升级公司的项目的-js-ts、webpack-vite" aria-label="Permalink to &quot;**你是如何升级公司的项目的（JS-&gt; TS、Webpack -&gt; Vite）**&quot;">​</a></h2><ol><li>首先项目升级要考虑的是 打包工具升级，如 Webpack 升级到 Vite。</li><li>插件的问题，部分插件是 Webpack 插件，迁移到 Vite 需要进行替换。</li><li>如果没有对应的插件，我会根据插件复杂度，如果是比较简单的插件，可能我会自己实现一个对应的，替换（例如：SVG 精灵图）。如果是比较复杂的插件，我会先去参考对应的插件的开源代码，进行 Vite 封装。</li><li>类型问题，我会先允许写 JavaScript 与 TypeScript 共存的文件，可以通过写 同名的 xxx.d.ts 类型文件解决类型提示的问题。</li><li>项目依赖的问题，JavaScript 的项目升级到 TypeScript 会有部分依赖没有 TypeScript 类型，可以通过安装统一类型提示 <code>@types/xxx</code> 解决。</li><li>如果库实在没有 TS 类型，可以自己写一个全局的 global.d.ts 文件，用来声明库的类型。</li></ol><p><strong>Vite .VS Webpack</strong></p><ol><li>Webpack 的缺点：使用 babel-loader 打包，比 Vite 慢很多，第一次启动需要打包所有文件（当然也支持 ES 模块，但是配置起来很麻烦）</li><li>Vite 的优点是什么？基于 ES 模块的开发服务器，热更新（HMR）支持原生 ES 模块，只更新发生改变的模块。生产环境使用 rollup 和 esbuild 打包。</li></ol><h2 id="如何封装公司的业务组件的-列举几个例子" tabindex="-1">如何封装公司的业务组件的，列举几个例子？ <a class="header-anchor" href="#如何封装公司的业务组件的-列举几个例子" aria-label="Permalink to &quot;如何封装公司的业务组件的，列举几个例子？&quot;">​</a></h2><ul><li>公司的表单组件比较多，可以封装一个数据格式转为表单的组件，快捷渲染表单</li><li>公司的表格使用 Element，默认模板比较多（table-column），可以封装为 options 选项，传入一个数组对象渲染</li><li>对上传组件进行二次封装，上传的公共参数封装（header 头权限添加），附带参数的上传（formData）</li></ul><h2 id="你平时通过哪些渠道获取知识源" tabindex="-1">你平时通过哪些渠道获取知识源 <a class="header-anchor" href="#你平时通过哪些渠道获取知识源" aria-label="Permalink to &quot;你平时通过哪些渠道获取知识源&quot;">​</a></h2><ol><li>关注一些编程大佬的 twitter</li><li>去 <a href="https://news.ycombinator.com/" target="_blank" rel="noreferrer">hackernews</a> 看一些热点新闻</li></ol><h2 id="用过哪些-css-预处理器-它们的语法是怎样的" tabindex="-1">用过哪些 CSS 预处理器，它们的语法是怎样的？ <a class="header-anchor" href="#用过哪些-css-预处理器-它们的语法是怎样的" aria-label="Permalink to &quot;用过哪些 CSS 预处理器，它们的语法是怎样的？&quot;">​</a></h2><h3 id="sass" tabindex="-1">Sass <a class="header-anchor" href="#sass" aria-label="Permalink to &quot;Sass&quot;">​</a></h3><p>语法使用示例</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// --- 声明变量</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$primary-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#FF0000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// --- 使用变量</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$primary-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// --- for循环</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@for</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> through</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .item-</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">#{$i}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// --- 模板字符串插值</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$prefix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;btn&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@for</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> through</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">#{$prefix}</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">#{$i}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$primary-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$font-size</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="stylus" tabindex="-1">stylus <a class="header-anchor" href="#stylus" aria-label="Permalink to &quot;stylus&quot;">​</a></h3><div class="language-stylus vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">stylus</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 声明变量</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">primary-color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> #FF0000</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">font-size</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用变量</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: primary-color</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: font-size</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// for循环</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .item-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{i}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 模板字符串插值</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">prefix</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;btn&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .#{prefix}-{i}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: primary-color</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: font-size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i</span></span></code></pre></div><h3 id="less" tabindex="-1">Less <a class="header-anchor" href="#less" aria-label="Permalink to &quot;Less&quot;">​</a></h3><div class="language-less vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">less</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 声明变量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">primary-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#FF0000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用变量</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">primary-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// for循环</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.for-loop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(@</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">when</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (@</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .item-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .for-loop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(@</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.for-loop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 模板字符串插值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">prefix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;btn&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.for-loop2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(@</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">when</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (@</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">prefix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">primary-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">font-size</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .for-loop2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(@</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.for-loop2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,48),p=[h];function k(t,e,r,E,d,g){return a(),i("div",null,p)}const c=s(l,[["render",k]]);export{o as __pageData,c as default};
