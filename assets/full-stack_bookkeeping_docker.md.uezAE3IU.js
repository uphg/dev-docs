import{_ as a}from"./chunks/plugin-vue_export-helper.x3n3nnut.js";import{x as s,v as e,z as t}from"./chunks/vue.6z6dcVl3.js";const u=JSON.parse('{"title":"Docker 操作手册","description":"","frontmatter":{},"headers":[],"relativePath":"full-stack/bookkeeping/docker.md","filePath":"full-stack/bookkeeping/docker.md","lastUpdated":1693910240000}'),i={name:"full-stack/bookkeeping/docker.md"},o=t(`<h1 id="docker-操作手册" tabindex="-1">Docker 操作手册 <a class="header-anchor" href="#docker-操作手册" aria-label="Permalink to &quot;Docker 操作手册&quot;">​</a></h1><h2 id="docker-start" tabindex="-1">docker start <a class="header-anchor" href="#docker-start" aria-label="Permalink to &quot;docker start&quot;">​</a></h2><p>启动一个或多个已停止的容器</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start [options] container [container...]</span></span></code></pre></div><h2 id="docker-stop" tabindex="-1">docker stop <a class="header-anchor" href="#docker-stop" aria-label="Permalink to &quot;docker stop&quot;">​</a></h2><p>停止一个或多个正在运行的容器</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop [options] container [container...]</span></span></code></pre></div><h2 id="docker-ps" tabindex="-1">docker ps <a class="header-anchor" href="#docker-ps" aria-label="Permalink to &quot;docker ps&quot;">​</a></h2><p>查看容器状态</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ps [options]</span></span></code></pre></div><h3 id="选项" tabindex="-1">选项 <a class="header-anchor" href="#选项" aria-label="Permalink to &quot;选项&quot;">​</a></h3><table><thead><tr><th>选项</th><th>缩写</th><th>描述</th></tr></thead><tbody><tr><td><code>--all</code></td><td><code>-a</code></td><td>显示所有容器，包括未启动的（默认显示刚刚运行）</td></tr><tr><td><code>--last</code></td><td><code>-n</code></td><td>显示上次创建的容器</td></tr><tr><td><code>--quiet</code></td><td><code>-q</code></td><td>仅显示容器 ID</td></tr></tbody></table><h2 id="docker-exec" tabindex="-1">docker exec <a class="header-anchor" href="#docker-exec" aria-label="Permalink to &quot;docker exec&quot;">​</a></h2><p>在正在运行的容器中执行命令。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec [OPTIONS] CONTAINER COMMAND [ARG...]</span></span></code></pre></div><p>docker 查看日志</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进入容器的 bash</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec -it 容器名称 bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看日志</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tail</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> log/production.log</span></span></code></pre></div>`,17),d=[o];function n(c,h,l,p,r,k){return e(),s("div",null,d)}const F=a(i,[["render",n]]);export{u as __pageData,F as default};
