import{_ as s}from"./chunks/plugin-vue_export-helper.x3n3nnut.js";import{x as i,v as a,z as t}from"./chunks/vue.6z6dcVl3.js";const b=JSON.parse('{"title":"Vite 错误","description":"","frontmatter":{},"headers":[],"relativePath":"errors/vite.md","filePath":"errors/vite.md","lastUpdated":1714822567000}'),e={name:"errors/vite.md"},n=t(`<h1 id="vite-错误" tabindex="-1">Vite 错误 <a class="header-anchor" href="#vite-错误" aria-label="Permalink to &quot;Vite 错误&quot;">​</a></h1><h2 id="unocss-transformer-attributify-jsx-插件失效" tabindex="-1"><code>@unocss/transformer-attributify-jsx</code> 插件失效 <a class="header-anchor" href="#unocss-transformer-attributify-jsx-插件失效" aria-label="Permalink to &quot;\`@unocss/transformer-attributify-jsx\` 插件失效&quot;">​</a></h2><p>首先安装 babel 版本</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> import transformerAttributifyJsx from &#39;@unocss/transformer-attributify-jsx&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> import transformerAttributifyJsx from &#39;@unocss/transformer-attributify-jsx-babel&#39;</span></span></code></pre></div><p>然后可能需要安装 <code>@babel/preset-typescript</code></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add -D @babel/preset-typescript</span></span></code></pre></div><h2 id="vue-tsc-cannot-find-module-src-or-its-corresponding-type-declarations" tabindex="-1">vue-tsc <code>Cannot find module &#39;src&#39; or its corresponding type declarations</code> <a class="header-anchor" href="#vue-tsc-cannot-find-module-src-or-its-corresponding-type-declarations" aria-label="Permalink to &quot;vue-tsc \`Cannot find module &#39;src&#39; or its corresponding type declarations\`&quot;">​</a></h2><p>如果你在使用 Vite 打包时提示一个类似这样的报错</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node_modules/xxx/xxx/xxx.d.ts:5:28</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> - error TS2307: Cannot find module &#39;src&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> or its corresponding type declarations</span></span></code></pre></div><p>多半是 <code>vue-tsc</code> 没有跳过 <code>node_modules</code> 包的检查，可以添加 <code>--skipLibCheck</code> 命令跳过，如下</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// package.json</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;script&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vue-tsc --noEmit --skipLibCheck &amp;&amp; vite build&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>想要知道 <code>vue-tsc</code> 有哪些参数，可以运行如下命令</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./node_modules/.bin/vue-tsc --help</span></span></code></pre></div>`,13),o=[n];function p(r,l,d,h,c,k){return a(),i("div",null,o)}const m=s(e,[["render",p]]);export{b as __pageData,m as default};
